{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "00 - go install gongc",
            "type": "shell",
            "options": {
                "cwd": "go/cmd/gongc"
            },
            "command": "go",
            "args": [
                "install",
            ],
            "group": "build"
        },
        {
            "label": "00 - go work edit -use gong",
            "type": "shell",
            "options": {
                "cwd": "./"
            },
            "command": "go",
            "args": [
                "work",
                "edit",
                "-use",
                "gong"
            ],
            "group": "build"
        },
        {
            "label": "00 - go work edit -dropuse gong",
            "type": "shell",
            "options": {
                "cwd": "./"
            },
            "command": "go",
            "args": [
                "work",
                "edit",
                "-dropuse",
                "gong"
            ],
            "group": "build"
        },
        {
            "label": "00 - go install gong",
            "type": "shell",
            "options": {
                "cwd": "./go/cmd/gong"
            },
            "command": "go",
            "args": [
                "install",
            ],
            "group": "build"
        },
        {
            "label": "04 - go run test",
            "type": "shell",
            "options": {
                "cwd": "./test/go/cmd/test"
            },
            "command": "go",
            "args": [
                "run",
                "main.go"
            ],
            "group": "build"
        },
        {
            "label": "Sleepdelay",
            "type": "shell",
            "command": "sleep 1",
            "windows": {
                "command": "ping 127.0.0.1 -n 1 > nul"
            },
            "group": "none",
            "presentation": {
                "reveal": "silent",
                "panel": "new"
            }
        },
        {
            "label": "00 - go get -d github.com/fullstack-lang/gongdoc@HEAD; go mod tidy; go mod vendor",
            "type": "shell",
            "group": "build",
            "command": "go get -d github.com/fullstack-lang/gongdoc@HEAD; go mod tidy; go mod vendor"
        },
        {
            "label": "00 - go get -d github.com/fullstack-lang/gongtree@HEAD; go mod tidy; go mod vendor",
            "type": "shell",
            "group": "build",
            "command": "go get -d github.com/fullstack-lang/gongtree@HEAD; go mod tidy; go mod vendor"
        },
        {
            "label": "00 - go get -d github.com/fullstack-lang/gongrouter@HEAD; go mod tidy; go mod vendor",
            "type": "shell",
            "group": "build",
            "command": "go get -d github.com/fullstack-lang/gongrouter@HEAD; go mod tidy; go mod vendor"
        },
        {
            "label": "00 - go get -d github.com/fullstack-lang/gongtable@HEAD; go mod tidy; go mod vendor",
            "type": "shell",
            "group": "build",
            "command": "go get -d github.com/fullstack-lang/gongtable@HEAD; go mod tidy; go mod vendor"
        },
        {
            "label": "00 - update dependencies",
            "type": "shell",
            "command": "go",
            "args": [
                "get",
                "-d",
                "github.com/fullstack-lang/gongdoc@HEAD",
                "github.com/fullstack-lang/gongtree@HEAD",
                "github.com/fullstack-lang/gongtable@HEAD",
            ],
            "group": "build"
        },
        {
            "label": "04 - go run test -marshallOnStartup=stage",
            "type": "shell",
            "options": {
                "cwd": "./test/go/cmd/test"
            },
            "command": "go",
            "args": [
                "run",
                "main.go",
                "stage.go",
                "-marshallOnStartup=stage"
            ],
            "group": "build"
        },
        {
            "label": "04 - go run main.go -marshallOnCommit stage_out -unmarshallFromCode stage.go -diagrams",
            "type": "shell",
            "options": {
                "cwd": "./test/go/cmd/test"
            },
            "command": "go",
            "args": [
                "run",
                "main.go",
                "-marshallOnCommit=stage_out",
                "-unmarshallFromCode",
                "stage.go",
                "-diagrams"
            ],
            "group": "build"
        },
        {
            "label": "04 - go run main.go -unmarshallFromCode stage.go -diagrams",
            "type": "shell",
            "options": {
                "cwd": "./test/go/cmd/test"
            },
            "command": "go",
            "args": [
                "run",
                "main.go",
                "-unmarshallFromCode",
                "stage.go",
                "-diagrams"
            ],
            "group": "build"
        },
        {
            "label": "04 - go run gong",
            "type": "shell",
            "options": {
                "cwd": "./go/cmd/gong"
            },
            "command": "go run main.go",
            "group": "build"
        },
        {
            "label": "04 - go run test2 -unmarshallFromCode=stage2.go -marshallOnCommit=stage2",
            "type": "shell",
            "options": {
                "cwd": "./test2/go/cmd/test2"
            },
            "command": "go",
            "group": "build",
            "args": [
                "run",
                "main.go",
                "-unmarshallFromCode",
                "stage2.go",
                "-marshallOnCommit",
                "stage2",
            ]
        },
        {
            "label": "03 - ngbuild test",
            "type": "shell",
            "command": "cd test/ng; ngbuild",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "03 - ng serve test --host=127.0.0.1",
            "type": "shell",
            "options": {
                "cwd": "test/ng"
            },
            "command": "ng",
            "group": "build",
            "args": [
                "serve",
                "--host=127.0.0.1"
            ]
        },
        {
            "label": "03 - lsof -ti :8080 | xargs kill",
            "type": "shell",
            "command": "lsof -ti :8080 | xargs kill",
            "group": "build"
        },
        {
            "label": "03 - ng serve test2 --host=127.0.0.1",
            "type": "shell",
            "options": {
                "cwd": "test2/ng"
            },
            "command": "ng",
            "group": "build",
            "args": [
                "serve",
                "--host=127.0.0.1"
            ]
        },
        {
            "label": "03 - ng serve test ",
            "type": "shell",
            "options": {
                "cwd": "test/ng"
            },
            "command": "ng",
            "group": "build",
            "args": [
                "serve",
                ""
            ]
        },
        {
            "label": "03 - ngserve test ",
            "type": "shell",
            "options": {
                "cwd": "test/ng"
            },
            "command": "ngserve",
            "group": "build",
            "args": [
                "",
                ""
            ]
        },
        {
            "label": "03 - ng serve test2",
            "type": "shell",
            "options": {
                "cwd": "test2/ng"
            },
            "command": "ng serve",
            "group": "build"
        },
        {
            "label": "01 - gongc test -skipNg",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/test/go/models"
            },
            "command": "gongc",
            "group": "build",
            "args": [
                "-skipNg"
            ]
        },
        {
            "label": "01 - remove test main.go",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/test/go/cmd/test",
            },
            "command": "rm",
            "group": "build",
            "args": [
                "main.go"
            ]
        },
        {
            "label": "01 - gongc test",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/test/go/models"
            },
            "command": "gongc",
            "group": "build",
            "args": []
        },
        {
            "label": "01 - gongc test -skipGoModCommands",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/test/go/models"
            },
            "command": "gongc",
            "group": "build",
            "args": [
                "-skipGoModCommands"
            ]
        },
        {
            "label": "01 - gongc test2",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/test2/go/models"
            },
            "command": "gongc",
            "group": "build",
            "args": []
        },
        {
            "label": "01 - gongc gong",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/go/models"
            },
            "command": "gongc",
            "group": "build",
            "args": []
        },
        {
            "label": "01 - gongc gong -skipGoModCommands -skipNg",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/go/models"
            },
            "command": "gongc",
            "group": "build",
            "args": [
                "-skipGoModCommands",
                "-skipNg"
            ]
        },
        {
            // you can check in go.mod, the timestamp is UTC
            "label": "00 go mod tidy",
            "type": "shell",
            "group": "build",
            "command": "go mod tidy"
        },
        {
            "label": "Sequence - gongc all",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/.."
            },
            "group": "build",
            "command": "find . -type d -name vendor -prune -o -name gong.go -print -execdir gongc -skipGoModCommands \\;"
        },
        {
            "label": "Sequence - gongc all -skipNg -skipGoModCommands",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/.."
            },
            "group": "build",
            "command": "find . -type d -name vendor -prune -o -name gong.go -print -execdir gongc -skipNg -skipGoModCommands \\;"
        },
    ]
}