{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "00 - cypress issue 519 on test3",
      "type": "shell",
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/test3/ng-github.com-fullstack-lang-gong-test3"
      },
      "command": "npx cypress run --browser chrome --spec 'cypress/e2e/issue 519.cy.ts'"
    },
    {
      "label": "00 - cypress on issue 520 - delete table row",
      "type": "shell",
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/test3/ng-github.com-fullstack-lang-gong-test3"
      },
      "command": "npx cypress run --browser chrome --spec 'cypress/e2e/issue 520.cy.ts'"
    },
    {
      "label": "00 - cypress open on test3",
      "type": "shell",
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/test3/ng-github.com-fullstack-lang-gong-test3"
      },
      "command": "npx cypress open"
    },
    {
      "label": "00 - go install gongc",
      "type": "shell",
      "options": {
        "cwd": "go/cmd/gongc"
      },
      "command": "go",
      "args": [
        "install"
      ],
      "group": "build"
    },
    {
      "label": "00 - go mod vendor",
      "type": "shell",
      "group": "build",
      "command": "go mod vendor"
    },
    {
      // you can check in go.mod, the timestamp is UTC
      "label": "00 go mod tidy",
      "type": "shell",
      "group": "build",
      "command": "go mod tidy"
    },
    {
      "label": "00 - go wasm",
      "type": "shell",
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/test3/go/cmd/test3"
      },
      "command": "GOOS=js GOARCH=wasm go build -o wasmworkbench.wasm"
    },
    {
      "label": "00 - Run all gongc -skipGoModCommands -skipNg",
      "type": "shell",
      "command": "find . -type f -name \"embed_ng_dist_ng.go\" -exec dirname {} \\; | sort -u | while IFS= read -r dir; do (cd \"$dir\" && gongc -skipGoModCommands -skipNg go/models); done",
      "group": "build"
    },
    {
      "label": "00 - Run all gongc -skipGoModCommands -skipNpmWorkspaces",
      "type": "shell",
      "command": "find . -type f -name \"embed_ng_dist_ng.go\" -exec dirname {} \\; | sort -u | while IFS= read -r dir; do (cd \"$dir\" && gongc -skipGoModCommands -skipNpmWorkspaces go/models); done",
      "group": "build"
    },
    {
      "label": "01 - gongc button",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/button"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc cursor",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/cursor"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc doc",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/doc"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc doc2",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/doc2"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "-skipStager=false",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc doc -clean",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/doc/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-clean"
      ]
    },
    {
      "label": "01 - gongc load",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/load"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc probe",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/probe"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc gantt",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/gantt"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc gong",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc gong -clean",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-clean"
      ]
    },
    {
      "label": "01 - gongc gong -skipGoModCommands -skipNg",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNg"
      ]
    },
    {
      "label": "01 - gongc sim",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/sim"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc ssg",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/ssg"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "-skipStager=false",
        "go/models",
      ]
    },
    {
      "label": "01 - gongc slider",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/slider"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc split",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/split"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc table",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/table"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc test -skipGoModCommands -skipNpmWorkspaces",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/test/test/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces"
      ]
    },
    {
      "label": "01 - gongc test -skipNg",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/test/test/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipNg"
      ]
    },
    {
      "label": "01 - gongc test -skipNpmWorkspaces",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/test/test/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipNpmWorkspaces"
      ]
    },
    {
      "label": "01 - gongc test2",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/test/test2/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces"
      ]
    },
    {
      "label": "01 - gongc test3",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/test/test3/go/models"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces"
      ]
    },
    {
      "label": "01 - gongc tone",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/tone"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "-skipStager=false",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc tree",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/tree"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc xlsx",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/xlsx"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - gongc svg",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/lib/svg"
      },
      "command": "gongc",
      "group": "build",
      "args": [
        "-skipGoModCommands",
        "-skipNpmWorkspaces",
        "go/models"
      ]
    },
    {
      "label": "01 - remove test main.go",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/test/test/go/cmd/test"
      },
      "command": "rm",
      "group": "build",
      "args": [
        "main.go"
      ]
    },
    {
      "label": "03 - lsof -ti :8080 | xargs kill",
      "type": "shell",
      "command": "lsof -ti :8080 | xargs kill",
      "group": "build"
    },
    {
      "label": "03 - ng build test",
      "type": "shell",
      "options": {
        "cwd": "test/test/ng-github.com-fullstack-lang-gong-test-test"
      },
      "command": "ng build",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "03 - ng serve doc ",
      "type": "shell",
      "options": {
        "cwd": "lib/doc/ng-github.com-fullstack-lang-gong-lib-doc"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve load",
      "type": "shell",
      "options": {
        "cwd": "lib/load/ng-github.com-fullstack-lang-gong-lib-load"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve probe",
      "type": "shell",
      "options": {
        "cwd": "lib/probe/ng-github.com-fullstack-lang-gong-lib-probe"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve split ",
      "type": "shell",
      "options": {
        "cwd": "lib/split/ng-github.com-fullstack-lang-gong-lib-split"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve svg ",
      "type": "shell",
      "options": {
        "cwd": "lib/svg/ng-github.com-fullstack-lang-gong-lib-svg"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve table ",
      "type": "shell",
      "options": {
        "cwd": "lib/table/ng-github.com-fullstack-lang-gong-lib-table"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve test ",
      "type": "shell",
      "options": {
        "cwd": "test/test/ng-github.com-fullstack-lang-gong-test-test"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve test --host=127.0.0.1",
      "type": "shell",
      "options": {
        "cwd": "test/test/ng-github.com-fullstack-lang-gong-test-test"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        "--host=127.0.0.1"
      ]
    },
    {
      "label": "03 - ng serve test2 --host=127.0.0.1",
      "type": "shell",
      "options": {
        "cwd": "test2/ng"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        "--host=127.0.0.1"
      ]
    },
    {
      "label": "03 - ng serve test2",
      "type": "shell",
      "options": {
        "cwd": "test2/ng"
      },
      "command": "ng serve",
      "group": "build"
    },
    {
      "label": "03 - ng serve test3 --host=127.0.0.1",
      "type": "shell",
      "options": {
        "cwd": "test3/ng-github.com-fullstack-lang-gong-test3"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        "--host=127.0.0.1"
      ]
    },
    {
      "label": "03 - ng serve tone",
      "type": "shell",
      "options": {
        "cwd": "lib/tone/ng-github.com-fullstack-lang-gong-lib-tone"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve tree ",
      "type": "shell",
      "options": {
        "cwd": "lib/tree/ng-github.com-fullstack-lang-gong-lib-tree"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ng serve xlsx",
      "type": "shell",
      "options": {
        "cwd": "lib/xlsx/ng-github.com-fullstack-lang-gong-lib-xlsx"
      },
      "command": "ng",
      "group": "build",
      "args": [
        "serve",
        ""
      ]
    },
    {
      "label": "03 - ngserve test ",
      "type": "shell",
      "options": {
        "cwd": "test/test/ng"
      },
      "command": "ngserve",
      "group": "build",
      "args": [
        "",
        ""
      ]
    },
    {
      "label": "04 - go run doc",
      "type": "shell",
      "options": {
        "cwd": "./lib/doc/go/cmd/doc"
      },
      "command": "go",
      "args": [
        "run",
        "main.go"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run gong",
      "type": "shell",
      "options": {
        "cwd": "./go/cmd/gong"
      },
      "command": "go run main.go",
      "group": "build"
    },
    {
      "label": "04 - go run main.go -marshallOnCommit stage_out -unmarshallFromCode stage.go -diagrams",
      "type": "shell",
      "options": {
        "cwd": "./test/test/go/cmd/test"
      },
      "command": "go",
      "args": [
        "run",
        "main.go",
        "-marshallOnCommit=sdata/tage_out",
        "-unmarshallFromCode",
        "stage.go",
        "-diagrams"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run main.go -unmarshallFromCode stage.go -diagrams",
      "type": "shell",
      "options": {
        "cwd": "./test/test/go/cmd/test"
      },
      "command": "go",
      "args": [
        "run",
        "main.go",
        "-unmarshallFromCode",
        "stage.go",
        "-diagrams"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run load",
      "type": "shell",
      "options": {
        "cwd": "./lib/load/go/cmd/load"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/stage.go",
        "-marshallOnCommit=data/stage"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run split",
      "type": "shell",
      "options": {
        "cwd": "./lib/split/go/cmd/split"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/stage.go",
        "-marshallOnCommit=data/stage"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run split issue564",
      "type": "shell",
      "options": {
        "cwd": "./lib/split/go/cmd/split"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/stage.go",
        "-marshallOnCommit=data/stage_out"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run svg on rectangle",
      "type": "shell",
      "options": {
        "cwd": "./lib/svg/go/cmd/svg"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/rectangle.go",
        "-marshallOnCommit=data/rectangle_out"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run test",
      "type": "shell",
      "options": {
        "cwd": "./test/test/go/cmd/test"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/stage.go",
        "-marshallOnCommit=data/stage_out"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run test -marshallOnStartup=stage",
      "type": "shell",
      "options": {
        "cwd": "./test/test/go/cmd/test"
      },
      "command": "go",
      "args": [
        "run",
        "main.go",
        "stage.go",
        "-marshallOnStartup=stage"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run test2 -unmarshallFromCode=data/stage2.go -marshallOnCommidata/t=stage2",
      "type": "shell",
      "options": {
        "cwd": "./test2/go/cmd/test2"
      },
      "command": "go",
      "group": "build",
      "args": [
        "run",
        "main.go",
        "-unmarshallFromCode",
        "stage2.go",
        "-marshallOnCommit",
        "stage2"
      ]
    },
    {
      "label": "04 - go run tone",
      "type": "shell",
      "options": {
        "cwd": "./lib/tone/go/cmd/tone"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/stage.go",
        "-marshallOnCommit=data/stage"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run tree",
      "type": "shell",
      "options": {
        "cwd": "./lib/tree/go/cmd/tree"
      },
      "command": "go",
      "args": [
        "run",
        ".",
        "-unmarshallFromCode=data/stage.go",
        "-marshallOnCommit=data/stage"
      ],
      "group": "build"
    },
    {
      "label": "04 - go run test3 -marshallOnCommit stage_out -unmarshallFromCode stage.go",
      "type": "shell",
      "options": {
        "cwd": "./test3/go/cmd/test3"
      },
      "command": "go",
      "args": [
        "run",
        "main.go",
        "-marshallOnCommit=sdata/tage_out",
        "-unmarshallFromCode",
        "stage.go"
      ],
      "group": "build"
    },
    {
      "label": "Create and Run Helloworld Gong Example in /tmp",
      "type": "shell",
      "command": "rm -rf helloworld && mkdir helloworld && cd helloworld && mkdir -p go/models && echo \"package models\ntype Hello struct {\n  Name string\n  HelloType HelloType\n}\" > go/models/hello.go && echo \"package models\ntype Country struct {\n  Name string\n  Hello *Hello\n  AlternateHellos []*Hello\n}\" > go/models/country.go && echo \"package models\ntype HelloType string\nconst (\n  Casual HelloType = \\\"Casual\\\"\n  Formal HelloType = \\\"Formal\\\"\n)\" > go/models/hello_type.go && gongc -skipStager=false go/models && cd go/cmd/helloworld && ./helloworld -unmarshallFromCode=data/stage.go -marshallOnCommit=data/stage",
      "options": {
        "cwd": "/tmp" // Specifies the directory where the task command will run
      },
      "problemMatcher": [], // You might add problem matchers if gongc or ./helloworld produce structured errors
      "presentation": {
        "echo": true, // Show the command in the terminal before executing
        "reveal": "always", // Always show the terminal panel
        "focus": true, // Focus the terminal panel
        "panel": "shared", // Use a shared terminal panel for this task
        "clear": true // Clear the terminal before running the task
      },
      "detail": "Creates a temporary 'helloworld' project in /tmp, runs gongc and the compiled binary, then cleans up.",
      "group": "build"
    }
  ]
}