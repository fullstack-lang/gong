basePath: /api/github.com/fullstack-lang/gong/test/go/v1
consumes:
- application/json
definitions:
  Aclass:
    description: Aclass demonstrate basic metabaron
    properties:
      Aenum:
        description: enums is a supported type of gong (if they are string)
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Aenum_2:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Anarrayofa:
        items:
          $ref: '#/definitions/Aclass'
        type: array
      Anarrayofb:
        description: |-
          ONE-MANY association is a supported type of gong
          not that that in go, this is a MANY-MANY association. In gong, the association
          is implemented in the destination of the association, therefore, a Bclass instance
          is related to ZERO/ONE Aclass instance by Arrayofb field
        items:
          $ref: '#/definitions/Bclass'
        type: array
      Anarrayofb2Use:
        items:
          $ref: '#/definitions/AclassBclass2Use'
        type: array
      AnarrayofbUse:
        description: MANY-MANY association, (because AclassBclassUse ends with "Use")
        items:
          $ref: '#/definitions/AclassBclassUse'
        type: array
      Anotherarrayofb:
        description: gong supports different fields with the same destination struct,
          even itself
        items:
          $ref: '#/definitions/Bclass'
        type: array
      Anotherassociationtob_2:
        $ref: '#/definitions/Bclass'
      Anotherbooleanfield:
        type: boolean
      Associationtob:
        $ref: '#/definitions/Bclass'
      Benum:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Booleanfield:
        description: bool is a supported type of gong
        type: boolean
      CFloatfield:
        format: double
        type: number
      CName:
        type: string
      Date:
        description: time.Time is a supported type of gong
        format: date-time
        type: string
      Duration1:
        $ref: '#/definitions/Duration'
      Floatfield:
        description: float64 is a supported type of gong
        format: double
        type: number
      Intfield:
        description: int is a supported type of gong
        format: int64
        type: integer
      Name:
        description: a "Name" field is necessary to generate a GongStruct
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  AclassBclass2Use:
    properties:
      Bclass2:
        $ref: '#/definitions/Bclass'
      Name:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  AclassBclassUse:
    description: |-
      The go generated code is the same as for any struct.
      The "Use" at the end of the struct name will generate something different in the front
    properties:
      Bclass2:
        $ref: '#/definitions/Bclass'
      Name:
        type: string
    title: AclassBclassUse is the gong way of defining a MANY-MANY association
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  Bclass:
    description: Bclass demonstrate basic metabaron
    properties:
      Floatfield:
        format: double
        type: number
      Intfield:
        format: int64
        type: integer
      Name:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  NullBool:
    description: |-
      NullBool implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Bool:
        type: boolean
      Valid:
        type: boolean
    title: NullBool represents a bool that may be null.
    type: object
    x-go-package: database/sql
  NullFloat64:
    description: |-
      NullFloat64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Float64:
        format: double
        type: number
      Valid:
        type: boolean
    title: NullFloat64 represents a float64 that may be null.
    type: object
    x-go-package: database/sql
  NullInt64:
    description: |-
      NullInt64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Int64:
        format: int64
        type: integer
      Valid:
        type: boolean
    title: NullInt64 represents an int64 that may be null.
    type: object
    x-go-package: database/sql
  NullString:
    description: |-
      var s NullString
      err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
      ...
      if s.Valid {
      use s.String
      } else {
      NULL value
      }
    properties:
      String:
        type: string
      Valid:
        type: boolean
    title: |-
      NullString represents a string that may be null.
      NullString implements the Scanner interface so
      it can be used as a scan destination:
    type: object
    x-go-package: database/sql
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  aclassAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Aclass_AnarrayofaDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnarrayofaDBID_Index:
        $ref: '#/definitions/NullInt64'
      Aenum:
        description: enums is a supported type of gong (if they are string)
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Aenum_2:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Anarrayofa:
        items:
          $ref: '#/definitions/Aclass'
        type: array
      Anarrayofb:
        description: |-
          ONE-MANY association is a supported type of gong
          not that that in go, this is a MANY-MANY association. In gong, the association
          is implemented in the destination of the association, therefore, a Bclass instance
          is related to ZERO/ONE Aclass instance by Arrayofb field
        items:
          $ref: '#/definitions/Bclass'
        type: array
      Anarrayofb2Use:
        items:
          $ref: '#/definitions/AclassBclass2Use'
        type: array
      AnarrayofbUse:
        description: MANY-MANY association, (because AclassBclassUse ends with "Use")
        items:
          $ref: '#/definitions/AclassBclassUse'
        type: array
      Anotherarrayofb:
        description: gong supports different fields with the same destination struct,
          even itself
        items:
          $ref: '#/definitions/Bclass'
        type: array
      Anotherassociationtob_2:
        $ref: '#/definitions/Bclass'
      Anotherassociationtob_2ID:
        $ref: '#/definitions/NullInt64'
      Anotherbooleanfield:
        type: boolean
      Associationtob:
        $ref: '#/definitions/Bclass'
      AssociationtobID:
        $ref: '#/definitions/NullInt64'
      Benum:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Booleanfield:
        description: bool is a supported type of gong
        type: boolean
      CFloatfield:
        format: double
        type: number
      CName:
        type: string
      CreatedAt:
        format: date-time
        type: string
      Date:
        description: time.Time is a supported type of gong
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Duration1:
        $ref: '#/definitions/Duration'
      Floatfield:
        description: float64 is a supported type of gong
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Intfield:
        description: int is a supported type of gong
        format: int64
        type: integer
      Name:
        description: a "Name" field is necessary to generate a GongStruct
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AclassAPI is the input in POST API
    type: object
    x-go-name: AclassAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  aclassDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Aclass_AnarrayofaDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnarrayofaDBID_Index:
        $ref: '#/definitions/NullInt64'
      Aenum_2_Data:
        $ref: '#/definitions/NullString'
      Aenum_Data:
        $ref: '#/definitions/NullString'
      Anotherassociationtob_2ID:
        $ref: '#/definitions/NullInt64'
      Anotherbooleanfield_Data:
        $ref: '#/definitions/NullBool'
      AssociationtobID:
        $ref: '#/definitions/NullInt64'
      Benum_Data:
        $ref: '#/definitions/NullString'
      Booleanfield_Data:
        $ref: '#/definitions/NullBool'
      CFloatfield_Data:
        $ref: '#/definitions/NullFloat64'
      CName_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      Date_Data:
        $ref: '#/definitions/NullTime'
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Duration1_Data:
        $ref: '#/definitions/NullInt64'
      Floatfield_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AclassDB describes a aclass in the database
    type: object
    x-go-name: AclassDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  aclassbclass2useAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Aclass_Anarrayofb2UseDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_Anarrayofb2UseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bclass2:
        $ref: '#/definitions/Bclass'
      Bclass2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AclassBclass2UseAPI is the input in POST API
    type: object
    x-go-name: AclassBclass2UseAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  aclassbclass2useDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Aclass_Anarrayofb2UseDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_Anarrayofb2UseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bclass2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AclassBclass2UseDB describes a aclassbclass2use in the database
    type: object
    x-go-name: AclassBclass2UseDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  aclassbclassuseAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Aclass_AnarrayofbUseDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnarrayofbUseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bclass2:
        $ref: '#/definitions/Bclass'
      Bclass2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AclassBclassUseAPI is the input in POST API
    type: object
    x-go-name: AclassBclassUseAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  aclassbclassuseDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Aclass_AnarrayofbUseDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnarrayofbUseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bclass2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AclassBclassUseDB describes a aclassbclassuse in the database
    type: object
    x-go-name: AclassBclassUseDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  bclassAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Aclass_AnarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      Aclass_AnotherarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnotherarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Intfield:
        format: int64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: BclassAPI is the input in POST API
    type: object
    x-go-name: BclassAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  bclassDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Aclass_AnarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      Aclass_AnotherarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Aclass_AnotherarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Floatfield_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: BclassDB describes a bclass in the database
    type: object
    x-go-name: BclassDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  dclassAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: DclassAPI is the input in POST API
    type: object
    x-go-name: DclassAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  dclassDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: DclassDB describes a dclass in the database
    type: object
    x-go-name: DclassDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
host: localhost:8080
info:
  description: test exposes types of a package.
  title: test backend API
  version: "0.1"
paths:
  /aclassbclass2uses:
    get:
      description: Get all aclassbclass2uses
      operationId: getAclassBclass2Uses
      responses:
        "200":
          $ref: '#/responses/aclassbclass2useDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclassbclass2uses
    post:
      consumes:
      - application/json
      description: Creates a aclassbclass2use
      operationId: postAclassBclass2Use
      parameters:
      - description: The AclassBclass2Use to submit or modify
        in: body
        name: AclassBclass2Use
        schema:
          $ref: '#/definitions/aclassbclass2useAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/aclassbclass2useDBResponse'
      tags:
      - aclassbclass2uses
  /aclassbclass2uses/{ID}:
    delete:
      description: Delete a aclassbclass2use
      operationId: deleteAclassBclass2Use
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclassbclass2uses
    get:
      operationId: getAclassBclass2Use
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/aclassbclass2useDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a aclassbclass2use.
      tags:
      - aclassbclass2uses
    patch:
      description: Update a aclassbclass2use
      operationId: updateAclassBclass2Use
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The AclassBclass2Use to submit or modify
        in: body
        name: AclassBclass2Use
        schema:
          $ref: '#/definitions/aclassbclass2useAPI'
      responses:
        "200":
          $ref: '#/responses/aclassbclass2useDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclassbclass2uses
  /aclassbclassuses:
    get:
      description: Get all aclassbclassuses
      operationId: getAclassBclassUses
      responses:
        "200":
          $ref: '#/responses/aclassbclassuseDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclassbclassuses
    post:
      consumes:
      - application/json
      description: Creates a aclassbclassuse
      operationId: postAclassBclassUse
      parameters:
      - description: The AclassBclassUse to submit or modify
        in: body
        name: AclassBclassUse
        schema:
          $ref: '#/definitions/aclassbclassuseAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/aclassbclassuseDBResponse'
      tags:
      - aclassbclassuses
  /aclassbclassuses/{ID}:
    delete:
      description: Delete a aclassbclassuse
      operationId: deleteAclassBclassUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclassbclassuses
    get:
      operationId: getAclassBclassUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/aclassbclassuseDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a aclassbclassuse.
      tags:
      - aclassbclassuses
    patch:
      description: Update a aclassbclassuse
      operationId: updateAclassBclassUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The AclassBclassUse to submit or modify
        in: body
        name: AclassBclassUse
        schema:
          $ref: '#/definitions/aclassbclassuseAPI'
      responses:
        "200":
          $ref: '#/responses/aclassbclassuseDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclassbclassuses
  /aclasss:
    get:
      description: Get all aclasss
      operationId: getAclasss
      responses:
        "200":
          $ref: '#/responses/aclassDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclasss
    post:
      consumes:
      - application/json
      description: Creates a aclass
      operationId: postAclass
      parameters:
      - description: The Aclass to submit or modify
        in: body
        name: Aclass
        schema:
          $ref: '#/definitions/aclassAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/aclassDBResponse'
      tags:
      - aclasss
  /aclasss/{ID}:
    delete:
      description: Delete a aclass
      operationId: deleteAclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclasss
    get:
      operationId: getAclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/aclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a aclass.
      tags:
      - aclasss
    patch:
      description: Update a aclass
      operationId: updateAclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Aclass to submit or modify
        in: body
        name: Aclass
        schema:
          $ref: '#/definitions/aclassAPI'
      responses:
        "200":
          $ref: '#/responses/aclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclasss
  /bclasss:
    get:
      description: Get all bclasss
      operationId: getBclasss
      responses:
        "200":
          $ref: '#/responses/bclassDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bclasss
    post:
      consumes:
      - application/json
      description: Creates a bclass
      operationId: postBclass
      parameters:
      - description: The Bclass to submit or modify
        in: body
        name: Bclass
        schema:
          $ref: '#/definitions/bclassAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/bclassDBResponse'
      tags:
      - bclasss
  /bclasss/{ID}:
    delete:
      description: Delete a bclass
      operationId: deleteBclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - bclasss
    get:
      operationId: getBclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/bclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a bclass.
      tags:
      - bclasss
    patch:
      description: Update a bclass
      operationId: updateBclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Bclass to submit or modify
        in: body
        name: Bclass
        schema:
          $ref: '#/definitions/bclassAPI'
      responses:
        "200":
          $ref: '#/responses/bclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bclasss
  /commitnb:
    get:
      operationId: GetLastCommitNb
      tags:
      - backrepo
  /dclasss:
    get:
      description: Get all dclasss
      operationId: getDclasss
      responses:
        "200":
          $ref: '#/responses/dclassDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - dclasss
    post:
      consumes:
      - application/json
      description: Creates a dclass
      operationId: postDclass
      parameters:
      - description: The Dclass to submit or modify
        in: body
        name: Dclass
        schema:
          $ref: '#/definitions/dclassAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/dclassDBResponse'
      tags:
      - dclasss
  /dclasss/{ID}:
    delete:
      description: Delete a dclass
      operationId: deleteDclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - dclasss
    get:
      operationId: getDclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/dclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a dclass.
      tags:
      - dclasss
    patch:
      description: Update a dclass
      operationId: updateDclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Dclass to submit or modify
        in: body
        name: Dclass
        schema:
          $ref: '#/definitions/dclassAPI'
      responses:
        "200":
          $ref: '#/responses/dclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - dclasss
  /pushfromfrontnb:
    get:
      operationId: GetLastPushFromFrontNb
      tags:
      - backrepo
produces:
- application/json
responses:
  aclassDBResponse:
    description: AclassDBResponse provides response
    headers:
      Aclass_AnarrayofaDBID:
        description: Implementation of a reverse ID for field Aclass{}.Anarrayofa
          []*Aclass
      Aclass_AnarrayofaDBID_Index:
        description: implementation of the index of the withing the slice
      Aenum_2_Data:
        description: Declation for basic field aclassDB.Aenum_2 {{BasicKind}} (to
          be completed)
      Aenum_Data:
        description: Declation for basic field aclassDB.Aenum {{BasicKind}} (to be
          completed)
      Anotherassociationtob_2ID:
        description: |-
          field Anotherassociationtob_2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      Anotherbooleanfield_Data:
        description: |-
          Declation for basic field aclassDB.Anotherbooleanfield bool (to be completed)
          provide the sql storage for the boolan
      AssociationtobID:
        description: |-
          insertion for pointer fields encoding declaration
          field Associationtob is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      Benum_Data:
        description: Declation for basic field aclassDB.Benum {{BasicKind}} (to be
          completed)
      Booleanfield_Data:
        description: |-
          Declation for basic field aclassDB.Booleanfield bool (to be completed)
          provide the sql storage for the boolan
      CFloatfield_Data:
        description: Declation for basic field aclassDB.CFloatfield {{BasicKind}}
          (to be completed)
      CName_Data:
        description: Declation for basic field aclassDB.CName {{BasicKind}} (to be
          completed)
      CreatedAt:
        format: date-time
        type: string
      Date_Data:
        description: Declation for basic field aclassDB.Date
      DeletedAt: {}
      Duration1_Data:
        description: Declation for basic field aclassDB.Duration1 {{BasicKind}} (to
          be completed)
      Floatfield_Data:
        description: Declation for basic field aclassDB.Floatfield {{BasicKind}} (to
          be completed)
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        description: Declation for basic field aclassDB.Intfield {{BasicKind}} (to
          be completed)
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field aclassDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  aclassDBsResponse:
    description: AclassDBs arrays aclassDBs
    schema:
      items:
        $ref: '#/definitions/aclassDB'
      type: array
  aclassbclass2useDBResponse:
    description: AclassBclass2UseDBResponse provides response
    headers:
      Aclass_Anarrayofb2UseDBID:
        description: Implementation of a reverse ID for field Aclass{}.Anarrayofb2Use
          []*AclassBclass2Use
      Aclass_Anarrayofb2UseDBID_Index:
        description: implementation of the index of the withing the slice
      Bclass2ID:
        description: |-
          insertion for pointer fields encoding declaration
          field Bclass2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field aclassbclass2useDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  aclassbclass2useDBsResponse:
    description: AclassBclass2UseDBs arrays aclassbclass2useDBs
    schema:
      items:
        $ref: '#/definitions/aclassbclass2useDB'
      type: array
  aclassbclassuseDBResponse:
    description: AclassBclassUseDBResponse provides response
    headers:
      Aclass_AnarrayofbUseDBID:
        description: Implementation of a reverse ID for field Aclass{}.AnarrayofbUse
          []*AclassBclassUse
      Aclass_AnarrayofbUseDBID_Index:
        description: implementation of the index of the withing the slice
      Bclass2ID:
        description: |-
          insertion for pointer fields encoding declaration
          field Bclass2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field aclassbclassuseDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  aclassbclassuseDBsResponse:
    description: AclassBclassUseDBs arrays aclassbclassuseDBs
    schema:
      items:
        $ref: '#/definitions/aclassbclassuseDB'
      type: array
  bclassDBResponse:
    description: BclassDBResponse provides response
    headers:
      Aclass_AnarrayofbDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field Aclass{}.Anarrayofb []*Bclass
      Aclass_AnarrayofbDBID_Index:
        description: implementation of the index of the withing the slice
      Aclass_AnotherarrayofbDBID:
        description: Implementation of a reverse ID for field Aclass{}.Anotherarrayofb
          []*Bclass
      Aclass_AnotherarrayofbDBID_Index:
        description: implementation of the index of the withing the slice
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      Floatfield_Data:
        description: Declation for basic field bclassDB.Floatfield {{BasicKind}} (to
          be completed)
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        description: Declation for basic field bclassDB.Intfield {{BasicKind}} (to
          be completed)
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field bclassDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  bclassDBsResponse:
    description: BclassDBs arrays bclassDBs
    schema:
      items:
        $ref: '#/definitions/bclassDB'
      type: array
  dclassDBResponse:
    description: DclassDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field dclassDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullString'
  dclassDBsResponse:
    description: DclassDBs arrays dclassDBs
    schema:
      items:
        $ref: '#/definitions/dclassDB'
      type: array
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
