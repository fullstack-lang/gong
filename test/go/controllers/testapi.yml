basePath: /api/github.com/fullstack-lang/gong/test/go/v1
consumes:
- application/json
definitions:
  Astruct:
    description: Astruct demonstrate basic metabaron
    properties:
      Aenum:
        description: enums is a supported type of gong (if they are string)
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Aenum_2:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Anarrayofa:
        items:
          $ref: '#/definitions/Astruct'
        type: array
      Anarrayofb:
        description: |-
          ONE-MANY association is a supported type of gong
          not that that in go, this is a MANY-MANY association. In gong, the association
          is implemented in the destination of the association, therefore, a Bclass instance
          is related to ZERO/ONE Aclass instance by Arrayofb field
        items:
          $ref: '#/definitions/Bstruct'
        type: array
      Anarrayofb2Use:
        items:
          $ref: '#/definitions/AstructBstruct2Use'
        type: array
      AnarrayofbUse:
        description: MANY-MANY association, (because AclassBclassUse ends with "Use")
        items:
          $ref: '#/definitions/AstructBstructUse'
        type: array
      Anotherarrayofb:
        description: gong supports different fields with the same destination struct, even itself
        items:
          $ref: '#/definitions/Bstruct'
        type: array
      Anotherassociationtob_2:
        $ref: '#/definitions/Bstruct'
      Anotherbooleanfield:
        type: boolean
      Associationtob:
        $ref: '#/definitions/Bstruct'
      Benum:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Booleanfield:
        description: bool is a supported type of gong
        type: boolean
      CFloatfield:
        format: double
        type: number
      CName:
        type: string
      Date:
        description: time.Time is a supported type of gong
        format: date-time
        type: string
      Duration1:
        $ref: '#/definitions/Duration'
      Floatfield:
        description: float64 is a supported type of gong
        format: double
        type: number
      Intfield:
        description: int is a supported type of gong
        format: int64
        type: integer
      Name:
        description: a "Name" field is necessary to generate a GongStruct
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  AstructBstruct2Use:
    properties:
      Bstrcut2:
        $ref: '#/definitions/Bstruct'
      Name:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  AstructBstructUse:
    description: |-
      The go generated code is the same as for any struct.
      The "Use" at the end of the struct name will generate something different in the front
    properties:
      Bstruct2:
        $ref: '#/definitions/Bstruct'
      Name:
        type: string
    title: AstructBstructUse is the gong way of defining a MANY-MANY association
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  Bstruct:
    description: Bstruct demonstrate basic metabaron
    properties:
      Floatfield:
        format: double
        type: number
      Intfield:
        format: int64
        type: integer
      Name:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test/go/models
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  NullBool:
    description: |-
      NullBool implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Bool:
        type: boolean
      Valid:
        type: boolean
    title: NullBool represents a bool that may be null.
    type: object
    x-go-package: database/sql
  NullFloat64:
    description: |-
      NullFloat64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Float64:
        format: double
        type: number
      Valid:
        type: boolean
    title: NullFloat64 represents a float64 that may be null.
    type: object
    x-go-package: database/sql
  NullInt64:
    description: |-
      NullInt64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Int64:
        format: int64
        type: integer
      Valid:
        type: boolean
    title: NullInt64 represents an int64 that may be null.
    type: object
    x-go-package: database/sql
  NullString:
    description: |-
      var s NullString
      err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
      ...
      if s.Valid {
      use s.String
      } else {
      NULL value
      }
    properties:
      String:
        type: string
      Valid:
        type: boolean
    title: |-
      NullString represents a string that may be null.
      NullString implements the Scanner interface so
      it can be used as a scan destination:
    type: object
    x-go-package: database/sql
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  astructAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Aenum:
        description: enums is a supported type of gong (if they are string)
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Aenum_2:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Anarrayofa:
        items:
          $ref: '#/definitions/Astruct'
        type: array
      Anarrayofb:
        description: |-
          ONE-MANY association is a supported type of gong
          not that that in go, this is a MANY-MANY association. In gong, the association
          is implemented in the destination of the association, therefore, a Bclass instance
          is related to ZERO/ONE Aclass instance by Arrayofb field
        items:
          $ref: '#/definitions/Bstruct'
        type: array
      Anarrayofb2Use:
        items:
          $ref: '#/definitions/AstructBstruct2Use'
        type: array
      AnarrayofbUse:
        description: MANY-MANY association, (because AclassBclassUse ends with "Use")
        items:
          $ref: '#/definitions/AstructBstructUse'
        type: array
      Anotherarrayofb:
        description: gong supports different fields with the same destination struct, even itself
        items:
          $ref: '#/definitions/Bstruct'
        type: array
      Anotherassociationtob_2:
        $ref: '#/definitions/Bstruct'
      Anotherassociationtob_2ID:
        $ref: '#/definitions/NullInt64'
      Anotherbooleanfield:
        type: boolean
      Associationtob:
        $ref: '#/definitions/Bstruct'
      AssociationtobID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofaDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofaDBID_Index:
        $ref: '#/definitions/NullInt64'
      Benum:
        enum:
        - ENUM_VAL1_NOT_THE_SAME
        - ENUM_VAL2
        type: string
      Booleanfield:
        description: bool is a supported type of gong
        type: boolean
      CFloatfield:
        format: double
        type: number
      CName:
        type: string
      CreatedAt:
        format: date-time
        type: string
      Date:
        description: time.Time is a supported type of gong
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Duration1:
        $ref: '#/definitions/Duration'
      Floatfield:
        description: float64 is a supported type of gong
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Intfield:
        description: int is a supported type of gong
        format: int64
        type: integer
      Name:
        description: a "Name" field is necessary to generate a GongStruct
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AstructAPI is the input in POST API
    type: object
    x-go-name: AstructAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  astructDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Aenum_2_Data:
        $ref: '#/definitions/NullString'
      Aenum_Data:
        $ref: '#/definitions/NullString'
      Anotherassociationtob_2ID:
        $ref: '#/definitions/NullInt64'
      Anotherbooleanfield_Data:
        $ref: '#/definitions/NullBool'
      AssociationtobID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofaDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofaDBID_Index:
        $ref: '#/definitions/NullInt64'
      Benum_Data:
        $ref: '#/definitions/NullString'
      Booleanfield_Data:
        $ref: '#/definitions/NullBool'
      CFloatfield_Data:
        $ref: '#/definitions/NullFloat64'
      CName_Data:
        $ref: '#/definitions/NullString'
      CreatedAt:
        format: date-time
        type: string
      Date_Data:
        $ref: '#/definitions/NullTime'
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Duration1_Data:
        $ref: '#/definitions/NullInt64'
      Floatfield_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AstructDB describes a astruct in the database
    type: object
    x-go-name: AstructDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  astructbstruct2useAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Astruct_Anarrayofb2UseDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_Anarrayofb2UseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bstrcut2:
        $ref: '#/definitions/Bstruct'
      Bstrcut2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AstructBstruct2UseAPI is the input in POST API
    type: object
    x-go-name: AstructBstruct2UseAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  astructbstruct2useDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Astruct_Anarrayofb2UseDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_Anarrayofb2UseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bstrcut2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AstructBstruct2UseDB describes a astructbstruct2use in the database
    type: object
    x-go-name: AstructBstruct2UseDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  astructbstructuseAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Astruct_AnarrayofbUseDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofbUseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bstruct2:
        $ref: '#/definitions/Bstruct'
      Bstruct2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AstructBstructUseAPI is the input in POST API
    type: object
    x-go-name: AstructBstructUseAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  astructbstructuseDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Astruct_AnarrayofbUseDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofbUseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bstruct2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AstructBstructUseDB describes a astructbstructuse in the database
    type: object
    x-go-name: AstructBstructUseDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  bstructAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Astruct_AnarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      Astruct_AnotherarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnotherarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Intfield:
        format: int64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: BstructAPI is the input in POST API
    type: object
    x-go-name: BstructAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  bstructDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Astruct_AnarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      Astruct_AnotherarrayofbDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnotherarrayofbDBID_Index:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Floatfield_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: BstructDB describes a bstruct in the database
    type: object
    x-go-name: BstructDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  dstructAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: DstructAPI is the input in POST API
    type: object
    x-go-name: DstructAPI
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
  dstructDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: DstructDB describes a dstruct in the database
    type: object
    x-go-name: DstructDB
    x-go-package: github.com/fullstack-lang/gong/test/go/orm
host: localhost:8080
info:
  description: test exposes types of a package.
  title: test backend API
  version: "0.1"
paths:
  /astructbstruct2uses:
    get:
      description: Get all astructbstruct2uses
      operationId: getAstructBstruct2Uses
      responses:
        "200":
          $ref: '#/responses/astructbstruct2useDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstruct2uses
    post:
      consumes:
      - application/json
      description: Creates a astructbstruct2use
      operationId: postAstructBstruct2Use
      parameters:
      - description: The AstructBstruct2Use to submit or modify
        in: body
        name: AstructBstruct2Use
        schema:
          $ref: '#/definitions/astructbstruct2useAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/astructbstruct2useDBResponse'
      tags:
      - astructbstruct2uses
  /astructbstruct2uses/{ID}:
    delete:
      description: Delete a astructbstruct2use
      operationId: deleteAstructBstruct2Use
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstruct2uses
    get:
      operationId: getAstructBstruct2Use
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/astructbstruct2useDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a astructbstruct2use.
      tags:
      - astructbstruct2uses
    patch:
      description: Update a astructbstruct2use
      operationId: updateAstructBstruct2Use
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The AstructBstruct2Use to submit or modify
        in: body
        name: AstructBstruct2Use
        schema:
          $ref: '#/definitions/astructbstruct2useAPI'
      responses:
        "200":
          $ref: '#/responses/astructbstruct2useDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstruct2uses
  /astructbstructuses:
    get:
      description: Get all astructbstructuses
      operationId: getAstructBstructUses
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstructuses
    post:
      consumes:
      - application/json
      description: Creates a astructbstructuse
      operationId: postAstructBstructUse
      parameters:
      - description: The AstructBstructUse to submit or modify
        in: body
        name: AstructBstructUse
        schema:
          $ref: '#/definitions/astructbstructuseAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBResponse'
      tags:
      - astructbstructuses
  /astructbstructuses/{ID}:
    delete:
      description: Delete a astructbstructuse
      operationId: deleteAstructBstructUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstructuses
    get:
      operationId: getAstructBstructUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a astructbstructuse.
      tags:
      - astructbstructuses
    patch:
      description: Update a astructbstructuse
      operationId: updateAstructBstructUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The AstructBstructUse to submit or modify
        in: body
        name: AstructBstructUse
        schema:
          $ref: '#/definitions/astructbstructuseAPI'
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstructuses
  /astructs:
    get:
      description: Get all astructs
      operationId: getAstructs
      responses:
        "200":
          $ref: '#/responses/astructDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructs
    post:
      consumes:
      - application/json
      description: Creates a astruct
      operationId: postAstruct
      parameters:
      - description: The Astruct to submit or modify
        in: body
        name: Astruct
        schema:
          $ref: '#/definitions/astructAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/astructDBResponse'
      tags:
      - astructs
  /astructs/{ID}:
    delete:
      description: Delete a astruct
      operationId: deleteAstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructs
    get:
      operationId: getAstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/astructDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a astruct.
      tags:
      - astructs
    patch:
      description: Update a astruct
      operationId: updateAstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Astruct to submit or modify
        in: body
        name: Astruct
        schema:
          $ref: '#/definitions/astructAPI'
      responses:
        "200":
          $ref: '#/responses/astructDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructs
  /bstructs:
    get:
      description: Get all bstructs
      operationId: getBstructs
      responses:
        "200":
          $ref: '#/responses/bstructDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bstructs
    post:
      consumes:
      - application/json
      description: Creates a bstruct
      operationId: postBstruct
      parameters:
      - description: The Bstruct to submit or modify
        in: body
        name: Bstruct
        schema:
          $ref: '#/definitions/bstructAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/bstructDBResponse'
      tags:
      - bstructs
  /bstructs/{ID}:
    delete:
      description: Delete a bstruct
      operationId: deleteBstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - bstructs
    get:
      operationId: getBstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/bstructDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a bstruct.
      tags:
      - bstructs
    patch:
      description: Update a bstruct
      operationId: updateBstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Bstruct to submit or modify
        in: body
        name: Bstruct
        schema:
          $ref: '#/definitions/bstructAPI'
      responses:
        "200":
          $ref: '#/responses/bstructDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bstructs
  /commitnb:
    get:
      operationId: GetLastCommitNb
      tags:
      - backrepo
  /dstructs:
    get:
      description: Get all dstructs
      operationId: getDstructs
      responses:
        "200":
          $ref: '#/responses/dstructDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - dstructs
    post:
      consumes:
      - application/json
      description: Creates a dstruct
      operationId: postDstruct
      parameters:
      - description: The Dstruct to submit or modify
        in: body
        name: Dstruct
        schema:
          $ref: '#/definitions/dstructAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/dstructDBResponse'
      tags:
      - dstructs
  /dstructs/{ID}:
    delete:
      description: Delete a dstruct
      operationId: deleteDstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - dstructs
    get:
      operationId: getDstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/dstructDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a dstruct.
      tags:
      - dstructs
    patch:
      description: Update a dstruct
      operationId: updateDstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Dstruct to submit or modify
        in: body
        name: Dstruct
        schema:
          $ref: '#/definitions/dstructAPI'
      responses:
        "200":
          $ref: '#/responses/dstructDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - dstructs
  /pushfromfrontnb:
    get:
      operationId: GetLastPushFromFrontNb
      tags:
      - backrepo
produces:
- application/json
responses:
  astructDBResponse:
    description: AstructDBResponse provides response
    headers:
      Aenum_2_Data:
        description: Declation for basic field astructDB.Aenum_2 {{BasicKind}} (to be completed)
      Aenum_Data:
        description: Declation for basic field astructDB.Aenum {{BasicKind}} (to be completed)
      Anotherassociationtob_2ID:
        description: |-
          field Anotherassociationtob_2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      Anotherbooleanfield_Data:
        description: |-
          Declation for basic field astructDB.Anotherbooleanfield bool (to be completed)
          provide the sql storage for the boolan
      AssociationtobID:
        description: |-
          insertion for pointer fields encoding declaration
          field Associationtob is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      Astruct_AnarrayofaDBID:
        description: Implementation of a reverse ID for field Astruct{}.Anarrayofa []*Astruct
      Astruct_AnarrayofaDBID_Index:
        description: implementation of the index of the withing the slice
      Benum_Data:
        description: Declation for basic field astructDB.Benum {{BasicKind}} (to be completed)
      Booleanfield_Data:
        description: |-
          Declation for basic field astructDB.Booleanfield bool (to be completed)
          provide the sql storage for the boolan
      CFloatfield_Data:
        description: Declation for basic field astructDB.CFloatfield {{BasicKind}} (to be completed)
      CName_Data:
        description: Declation for basic field astructDB.CName {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      Date_Data:
        description: Declation for basic field astructDB.Date
      DeletedAt: {}
      Duration1_Data:
        description: Declation for basic field astructDB.Duration1 {{BasicKind}} (to be completed)
      Floatfield_Data:
        description: Declation for basic field astructDB.Floatfield {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        description: Declation for basic field astructDB.Intfield {{BasicKind}} (to be completed)
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field astructDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  astructDBsResponse:
    description: AstructDBs arrays astructDBs
    schema:
      items:
        $ref: '#/definitions/astructDB'
      type: array
  astructbstruct2useDBResponse:
    description: AstructBstruct2UseDBResponse provides response
    headers:
      Astruct_Anarrayofb2UseDBID:
        description: Implementation of a reverse ID for field Astruct{}.Anarrayofb2Use []*AstructBstruct2Use
      Astruct_Anarrayofb2UseDBID_Index:
        description: implementation of the index of the withing the slice
      Bstrcut2ID:
        description: |-
          insertion for pointer fields encoding declaration
          field Bstrcut2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field astructbstruct2useDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  astructbstruct2useDBsResponse:
    description: AstructBstruct2UseDBs arrays astructbstruct2useDBs
    schema:
      items:
        $ref: '#/definitions/astructbstruct2useDB'
      type: array
  astructbstructuseDBResponse:
    description: AstructBstructUseDBResponse provides response
    headers:
      Astruct_AnarrayofbUseDBID:
        description: Implementation of a reverse ID for field Astruct{}.AnarrayofbUse []*AstructBstructUse
      Astruct_AnarrayofbUseDBID_Index:
        description: implementation of the index of the withing the slice
      Bstruct2ID:
        description: |-
          insertion for pointer fields encoding declaration
          field Bstruct2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field astructbstructuseDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  astructbstructuseDBsResponse:
    description: AstructBstructUseDBs arrays astructbstructuseDBs
    schema:
      items:
        $ref: '#/definitions/astructbstructuseDB'
      type: array
  bstructDBResponse:
    description: BstructDBResponse provides response
    headers:
      Astruct_AnarrayofbDBID:
        description: |-
          insertion for pointer fields encoding declaration
          Implementation of a reverse ID for field Astruct{}.Anarrayofb []*Bstruct
      Astruct_AnarrayofbDBID_Index:
        description: implementation of the index of the withing the slice
      Astruct_AnotherarrayofbDBID:
        description: Implementation of a reverse ID for field Astruct{}.Anotherarrayofb []*Bstruct
      Astruct_AnotherarrayofbDBID_Index:
        description: implementation of the index of the withing the slice
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      Floatfield_Data:
        description: Declation for basic field bstructDB.Floatfield {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        description: Declation for basic field bstructDB.Intfield {{BasicKind}} (to be completed)
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field bstructDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  bstructDBsResponse:
    description: BstructDBs arrays bstructDBs
    schema:
      items:
        $ref: '#/definitions/bstructDB'
      type: array
  dstructDBResponse:
    description: DstructDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field dstructDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullString'
  dstructDBsResponse:
    description: DstructDBs arrays dstructDBs
    schema:
      items:
        $ref: '#/definitions/dstructDB'
      type: array
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
