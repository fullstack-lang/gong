basePath: /api/github.com/fullstack-lang/gong/test2/go/v1
consumes:
- application/json
definitions:
  AstructBstructUse:
    description: |-
      The go generated code is the same as for any struct.
      The "Use" at the end of the struct name will generate something different in the front
    properties:
      Bstruct2:
        $ref: '#/definitions/Bstruct'
      Name:
        type: string
    title: AstructBstructUse is the gong way of defining a MANY-MANY association
    type: object
    x-go-package: github.com/fullstack-lang/gong/test2/go/models
  Bstruct:
    properties:
      Name:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/gong/test2/go/models
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  NullBool:
    description: |-
      NullBool implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Bool:
        type: boolean
      Valid:
        type: boolean
    title: NullBool represents a bool that may be null.
    type: object
    x-go-package: database/sql
  NullFloat64:
    description: |-
      NullFloat64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Float64:
        format: double
        type: number
      Valid:
        type: boolean
    title: NullFloat64 represents a float64 that may be null.
    type: object
    x-go-package: database/sql
  NullInt64:
    description: |-
      NullInt64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Int64:
        format: int64
        type: integer
      Valid:
        type: boolean
    title: NullInt64 represents an int64 that may be null.
    type: object
    x-go-package: database/sql
  NullString:
    description: |-
      var s NullString
      err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
      ...
      if s.Valid {
      use s.String
      } else {
      NULL value
      }
    properties:
      String:
        type: string
      Valid:
        type: boolean
    title: |-
      NullString represents a string that may be null.
      NullString implements the Scanner interface so
      it can be used as a scan destination:
    type: object
    x-go-package: database/sql
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  astructAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      AnarrayofbUse:
        items:
          $ref: '#/definitions/AstructBstructUse'
        type: array
      Anotherbooleanfield:
        type: boolean
      Booleanfield:
        type: boolean
      CreatedAt:
        format: date-time
        type: string
      Date:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Duration1:
        $ref: '#/definitions/Duration'
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Intfield:
        format: int64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AstructAPI is the input in POST API
    type: object
    x-go-name: AstructAPI
    x-go-package: github.com/fullstack-lang/gong/test2/go/orm
  astructDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Anotherbooleanfield_Data:
        $ref: '#/definitions/NullBool'
      Booleanfield_Data:
        $ref: '#/definitions/NullBool'
      CreatedAt:
        format: date-time
        type: string
      Date_Data:
        $ref: '#/definitions/NullTime'
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Duration1_Data:
        $ref: '#/definitions/NullInt64'
      Floatfield_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AstructDB describes a astruct in the database
    type: object
    x-go-name: AstructDB
    x-go-package: github.com/fullstack-lang/gong/test2/go/orm
  astructbstructuseAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Astruct_AnarrayofbUseDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofbUseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bstruct2:
        $ref: '#/definitions/Bstruct'
      Bstruct2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AstructBstructUseAPI is the input in POST API
    type: object
    x-go-name: AstructBstructUseAPI
    x-go-package: github.com/fullstack-lang/gong/test2/go/orm
  astructbstructuseDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Astruct_AnarrayofbUseDBID:
        $ref: '#/definitions/NullInt64'
      Astruct_AnarrayofbUseDBID_Index:
        $ref: '#/definitions/NullInt64'
      Bstruct2ID:
        $ref: '#/definitions/NullInt64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: AstructBstructUseDB describes a astructbstructuse in the database
    type: object
    x-go-name: AstructBstructUseDB
    x-go-package: github.com/fullstack-lang/gong/test2/go/orm
  bstructAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: BstructAPI is the input in POST API
    type: object
    x-go-name: BstructAPI
    x-go-package: github.com/fullstack-lang/gong/test2/go/orm
  bstructDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: BstructDB describes a bstruct in the database
    type: object
    x-go-name: BstructDB
    x-go-package: github.com/fullstack-lang/gong/test2/go/orm
host: localhost:8080
info:
  description: test2 exposes types of a package.
  title: test2 backend API
  version: "0.1"
paths:
  /astructbstructuses:
    get:
      description: Get all astructbstructuses
      operationId: getAstructBstructUses
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstructuses
    post:
      consumes:
      - application/json
      description: Creates a astructbstructuse
      operationId: postAstructBstructUse
      parameters:
      - description: The AstructBstructUse to submit or modify
        in: body
        name: AstructBstructUse
        schema:
          $ref: '#/definitions/astructbstructuseAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBResponse'
      tags:
      - astructbstructuses
  /astructbstructuses/{ID}:
    delete:
      description: Delete a astructbstructuse
      operationId: deleteAstructBstructUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstructuses
    get:
      operationId: getAstructBstructUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a astructbstructuse.
      tags:
      - astructbstructuses
    patch:
      description: Update a astructbstructuse
      operationId: updateAstructBstructUse
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The AstructBstructUse to submit or modify
        in: body
        name: AstructBstructUse
        schema:
          $ref: '#/definitions/astructbstructuseAPI'
      responses:
        "200":
          $ref: '#/responses/astructbstructuseDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructbstructuses
  /astructs:
    get:
      description: Get all astructs
      operationId: getAstructs
      responses:
        "200":
          $ref: '#/responses/astructDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructs
    post:
      consumes:
      - application/json
      description: Creates a astruct
      operationId: postAstruct
      parameters:
      - description: The Astruct to submit or modify
        in: body
        name: Astruct
        schema:
          $ref: '#/definitions/astructAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/astructDBResponse'
      tags:
      - astructs
  /astructs/{ID}:
    delete:
      description: Delete a astruct
      operationId: deleteAstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructs
    get:
      operationId: getAstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/astructDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a astruct.
      tags:
      - astructs
    patch:
      description: Update a astruct
      operationId: updateAstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Astruct to submit or modify
        in: body
        name: Astruct
        schema:
          $ref: '#/definitions/astructAPI'
      responses:
        "200":
          $ref: '#/responses/astructDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - astructs
  /bstructs:
    get:
      description: Get all bstructs
      operationId: getBstructs
      responses:
        "200":
          $ref: '#/responses/bstructDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bstructs
    post:
      consumes:
      - application/json
      description: Creates a bstruct
      operationId: postBstruct
      parameters:
      - description: The Bstruct to submit or modify
        in: body
        name: Bstruct
        schema:
          $ref: '#/definitions/bstructAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/bstructDBResponse'
      tags:
      - bstructs
  /bstructs/{ID}:
    delete:
      description: Delete a bstruct
      operationId: deleteBstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - bstructs
    get:
      operationId: getBstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/bstructDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a bstruct.
      tags:
      - bstructs
    patch:
      description: Update a bstruct
      operationId: updateBstruct
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Bstruct to submit or modify
        in: body
        name: Bstruct
        schema:
          $ref: '#/definitions/bstructAPI'
      responses:
        "200":
          $ref: '#/responses/bstructDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bstructs
  /commitnb:
    get:
      operationId: GetLastCommitNb
      tags:
      - backrepo
  /pushfromfrontnb:
    get:
      operationId: GetLastPushFromFrontNb
      tags:
      - backrepo
produces:
- application/json
responses:
  astructDBResponse:
    description: AstructDBResponse provides response
    headers:
      Anotherbooleanfield_Data:
        description: |-
          Declation for basic field astructDB.Anotherbooleanfield bool (to be completed)
          provide the sql storage for the boolan
      Booleanfield_Data:
        description: |-
          Declation for basic field astructDB.Booleanfield bool (to be completed)
          provide the sql storage for the boolan
      CreatedAt:
        format: date-time
        type: string
      Date_Data:
        description: Declation for basic field astructDB.Date
      DeletedAt: {}
      Duration1_Data:
        description: Declation for basic field astructDB.Duration1 {{BasicKind}} (to be completed)
      Floatfield_Data:
        description: Declation for basic field astructDB.Floatfield {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Intfield_Data:
        description: Declation for basic field astructDB.Intfield {{BasicKind}} (to be completed)
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field astructDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  astructDBsResponse:
    description: AstructDBs arrays astructDBs
    schema:
      items:
        $ref: '#/definitions/astructDB'
      type: array
  astructbstructuseDBResponse:
    description: AstructBstructUseDBResponse provides response
    headers:
      Astruct_AnarrayofbUseDBID:
        description: Implementation of a reverse ID for field Astruct{}.AnarrayofbUse []*AstructBstructUse
      Astruct_AnarrayofbUseDBID_Index:
        description: implementation of the index of the withing the slice
      Bstruct2ID:
        description: |-
          insertion for pointer fields encoding declaration
          field Bstruct2 is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field astructbstructuseDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  astructbstructuseDBsResponse:
    description: AstructBstructUseDBs arrays astructbstructuseDBs
    schema:
      items:
        $ref: '#/definitions/astructbstructuseDB'
      type: array
  bstructDBResponse:
    description: BstructDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field bstructDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullString'
  bstructDBsResponse:
    description: BstructDBs arrays bstructDBs
    schema:
      items:
        $ref: '#/definitions/bstructDB'
      type: array
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
