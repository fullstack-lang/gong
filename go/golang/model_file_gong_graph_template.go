package golang

const ModelGongGraphFileTemplate = `// generated by ModelGongGraphFileTemplate
package models

func IsStaged[Type Gongstruct](stage *StageStruct, instance *Type) (ok bool) {

	switch target := any(instance).(type) {
	// insertion stage{{` + string(rune(ModelGongGraphStructInsertionIsStaged)) + `}}
	}
	return
}

// insertion stage per struct{{` + string(rune(ModelGongGraphStructInsertionIsStagedPerStruct)) + `}}

// StageBranch stages instance and apply StageBranch on all gongstruct instances that are
// referenced by pointers or slices of pointers of the insance
//
// the algorithm stops along the course of graph if a vertex is already staged
func StageBranch[Type Gongstruct](stage *StageStruct, instance *Type) {

	switch target := any(instance).(type) {
	// insertion stage branch{{` + string(rune(ModelGongGraphStructInsertionIsStageBranch)) + `}}
	}
}

// insertion stage branchper struct{{` + string(rune(ModelGongGraphStructInsertionIsStageBranchPerStruct)) + `}}
`
