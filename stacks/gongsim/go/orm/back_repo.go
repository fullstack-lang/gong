// generated by genORMTranslation.go
package orm

import (
	"github.com/fullstack-lang/gong/stacks/gongsim/go/models"
	"github.com/jinzhu/gorm"
)

// BackRepoStruct supports callback functions
type BackRepoStruct struct {
	// insertion point for per struct back repo declarations
	BackRepoEngine BackRepoEngineStruct

	BackRepoEvent BackRepoEventStruct

	BackRepoGongsimCommand BackRepoGongsimCommandStruct

	BackRepoGongsimStatus BackRepoGongsimStatusStruct

	BackRepoUpdateState BackRepoUpdateStateStruct

	CommitNb uint // this ng is updated at the BackRepo level but also at the BackRepo<GongStruct> level
}

func (backRepo *BackRepoStruct) GetLastCommitNb() uint {
	return backRepo.CommitNb
}

func (backRepo *BackRepoStruct) IncrementCommitNb() uint {
	backRepo.CommitNb = backRepo.CommitNb + 1
	return backRepo.CommitNb
}

// Init the BackRepoStruct inner variables and link to the database
func (backRepo *BackRepoStruct) Init(db *gorm.DB) {
	// insertion point for per struct back repo declarations
	backRepo.BackRepoEngine.Init(db)
	backRepo.BackRepoEvent.Init(db)
	backRepo.BackRepoGongsimCommand.Init(db)
	backRepo.BackRepoGongsimStatus.Init(db)
	backRepo.BackRepoUpdateState.Init(db)

	models.Stage.BackRepo = backRepo
}

// Commit the BackRepoStruct inner variables and link to the database
func (backRepo *BackRepoStruct) Commit(stage *models.StageStruct) {
	// insertion point for per struct back repo phase one commit
	backRepo.BackRepoEngine.CommitPhaseOne(stage)
	backRepo.BackRepoEvent.CommitPhaseOne(stage)
	backRepo.BackRepoGongsimCommand.CommitPhaseOne(stage)
	backRepo.BackRepoGongsimStatus.CommitPhaseOne(stage)
	backRepo.BackRepoUpdateState.CommitPhaseOne(stage)

	// insertion point for per struct back repo phase two commit
	backRepo.BackRepoEngine.CommitPhaseTwo(backRepo)
	backRepo.BackRepoEvent.CommitPhaseTwo(backRepo)
	backRepo.BackRepoGongsimCommand.CommitPhaseTwo(backRepo)
	backRepo.BackRepoGongsimStatus.CommitPhaseTwo(backRepo)
	backRepo.BackRepoUpdateState.CommitPhaseTwo(backRepo)

	backRepo.IncrementCommitNb()
}

// Checkout the database into the stage
func (backRepo *BackRepoStruct) Checkout(stage *models.StageStruct) {
	// insertion point for per struct back repo phase one commit
	backRepo.BackRepoEngine.CheckoutPhaseOne()
	backRepo.BackRepoEvent.CheckoutPhaseOne()
	backRepo.BackRepoGongsimCommand.CheckoutPhaseOne()
	backRepo.BackRepoGongsimStatus.CheckoutPhaseOne()
	backRepo.BackRepoUpdateState.CheckoutPhaseOne()

	// insertion point for per struct back repo phase two commit
	backRepo.BackRepoEngine.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoEvent.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoGongsimCommand.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoGongsimStatus.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoUpdateState.CheckoutPhaseTwo(backRepo)
}

var BackRepo BackRepoStruct

func GetLastCommitNb() uint {
	return BackRepo.GetLastCommitNb()
}
