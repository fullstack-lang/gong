// generated by genORMTranslation.go
package orm

import (
	"github.com/fullstack-lang/gong/stacks/gong/go/models"
	"github.com/jinzhu/gorm"
)

// BackRepoStruct supports callback functions
type BackRepoStruct struct {
	// insertion point for per struct back repo declarations
	BackRepoGongBasicField BackRepoGongBasicFieldStruct

	BackRepoGongEnum BackRepoGongEnumStruct

	BackRepoGongEnumValue BackRepoGongEnumValueStruct

	BackRepoGongStruct BackRepoGongStructStruct

	BackRepoModelPkg BackRepoModelPkgStruct

	BackRepoPointerToGongStructField BackRepoPointerToGongStructFieldStruct

	BackRepoSliceOfPointerToGongStructField BackRepoSliceOfPointerToGongStructFieldStruct

	CommitNb uint // this ng is updated at the BackRepo level but also at the BackRepo<GongStruct> level
}

func (backRepo *BackRepoStruct) GetLastCommitNb() uint {
	return backRepo.CommitNb
}

func (backRepo *BackRepoStruct) IncrementCommitNb() uint {
	backRepo.CommitNb = backRepo.CommitNb + 1
	return backRepo.CommitNb
}

// Init the BackRepoStruct inner variables and link to the database
func (backRepo *BackRepoStruct) Init(db *gorm.DB) {
	// insertion point for per struct back repo declarations
	backRepo.BackRepoGongBasicField.Init(db)
	backRepo.BackRepoGongEnum.Init(db)
	backRepo.BackRepoGongEnumValue.Init(db)
	backRepo.BackRepoGongStruct.Init(db)
	backRepo.BackRepoModelPkg.Init(db)
	backRepo.BackRepoPointerToGongStructField.Init(db)
	backRepo.BackRepoSliceOfPointerToGongStructField.Init(db)

	models.Stage.BackRepo = backRepo
}

// Commit the BackRepoStruct inner variables and link to the database
func (backRepo *BackRepoStruct) Commit(stage *models.StageStruct) {
	// insertion point for per struct back repo phase one commit
	backRepo.BackRepoGongBasicField.CommitPhaseOne(stage)
	backRepo.BackRepoGongEnum.CommitPhaseOne(stage)
	backRepo.BackRepoGongEnumValue.CommitPhaseOne(stage)
	backRepo.BackRepoGongStruct.CommitPhaseOne(stage)
	backRepo.BackRepoModelPkg.CommitPhaseOne(stage)
	backRepo.BackRepoPointerToGongStructField.CommitPhaseOne(stage)
	backRepo.BackRepoSliceOfPointerToGongStructField.CommitPhaseOne(stage)

	// insertion point for per struct back repo phase two commit
	backRepo.BackRepoGongBasicField.CommitPhaseTwo(backRepo)
	backRepo.BackRepoGongEnum.CommitPhaseTwo(backRepo)
	backRepo.BackRepoGongEnumValue.CommitPhaseTwo(backRepo)
	backRepo.BackRepoGongStruct.CommitPhaseTwo(backRepo)
	backRepo.BackRepoModelPkg.CommitPhaseTwo(backRepo)
	backRepo.BackRepoPointerToGongStructField.CommitPhaseTwo(backRepo)
	backRepo.BackRepoSliceOfPointerToGongStructField.CommitPhaseTwo(backRepo)

	backRepo.IncrementCommitNb()
}

// Checkout the database into the stage
func (backRepo *BackRepoStruct) Checkout(stage *models.StageStruct) {
	// insertion point for per struct back repo phase one commit
	backRepo.BackRepoGongBasicField.CheckoutPhaseOne()
	backRepo.BackRepoGongEnum.CheckoutPhaseOne()
	backRepo.BackRepoGongEnumValue.CheckoutPhaseOne()
	backRepo.BackRepoGongStruct.CheckoutPhaseOne()
	backRepo.BackRepoModelPkg.CheckoutPhaseOne()
	backRepo.BackRepoPointerToGongStructField.CheckoutPhaseOne()
	backRepo.BackRepoSliceOfPointerToGongStructField.CheckoutPhaseOne()

	// insertion point for per struct back repo phase two commit
	backRepo.BackRepoGongBasicField.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoGongEnum.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoGongEnumValue.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoGongStruct.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoModelPkg.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoPointerToGongStructField.CheckoutPhaseTwo(backRepo)
	backRepo.BackRepoSliceOfPointerToGongStructField.CheckoutPhaseTwo(backRepo)
}

var BackRepo BackRepoStruct

func GetLastCommitNb() uint {
	return BackRepo.GetLastCommitNb()
}
